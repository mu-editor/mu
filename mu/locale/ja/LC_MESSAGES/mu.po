# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-07-13 04:45+JST\n"
"PO-Revision-Date: 2018-07-13 05:42+JST\n"
"Last-Translator: Minoru Inachi\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"Language: ja\n"

#: ./mu/app.py:66
msgid "Logging to {}"
msgstr "ログ出力先: {}"

#: ./mu/app.py:183
msgid "Debugger requires a Python script filename to run."
msgstr "デバッガは実行のために Python スクリプトのファイル名を必要とします。"

#: ./mu/debugger/client.py:106
msgid "Connection timed out. Is your machine slow or busy? Free up some of the machine's resources and try again."
msgstr "接続がタイムアウトしました。マシンが遅いかビジーになっているようです。マシンのリソースを解放して再度試しください。"

#: ./mu/debugger/client.py:116
msgid ""
"Could not find localhost.\n"
"Ensure you have '127.0.0.1 localhost' in your /etc/hosts file."
msgstr ""
"localhostが見つかりません。"
"/etc/hosts ファイルに '127.0.0.1 localhost' があるか確認してください。"

#: ./mu/interface/dialogs.py:55
msgid "Select Mode"
msgstr "モードの選択"

#: ./mu/interface/dialogs.py:57
msgid "Please select the desired mode then click \"OK\". Otherwise, click \"Cancel\"."
msgstr "使うモードを選択して \"OK\" をクリックしてください。モードを変更しない場合は \"CANCEL\" をクリックしてください。"

#: ./mu/interface/dialogs.py:73
msgid "Change mode at any time by clicking the \"Mode\" button containing Mu's logo."
msgstr "Mu のロゴのついた \"モード\" ボタンをクリックすることにより、いつでもモードを変更できます。"

#: ./mu/interface/dialogs.py:107
msgid "When reporting a bug, copy and paste the content of the following log file."
msgstr "バグの報告の際には、以下のログファイルの内容をコピー＆ペーストしてください。"

#: ./mu/interface/dialogs.py:127
msgid ""
"The environment variables shown below will be set each time you run a Python 3 script.\n"
"\n"
"Each separate enviroment variable should be on a new line and of the form:\n"
"NAME=VALUE"
msgstr ""
"以下に示す環境変数は Python 3 スクリプトを実行する毎に設定されます。\n"
"\n"
"個々の環境変数は次の形式で改行で区切って指定するようにしてください:\n"
"名前=値"


#: ./mu/interface/dialogs.py:150
msgid "Minify Python code before flashing?"
msgstr "転送の前に Python コードを縮小しますか？"

#: ./mu/interface/dialogs.py:153
msgid "Override the built-in MicroPython runtime with the following hex file (empty means use the default):"
msgstr "組込みの MicroPython ランタイムを以下の hex ファイルで上書きする(空であればデフォルトのものを利用):"

#: ./mu/interface/dialogs.py:175 ./mu/interface/main.py:974
msgid "Mu Administration"
msgstr "Mu 管理"

#: ./mu/interface/dialogs.py:186
msgid "Current Log"
msgstr "現在のログ"

#: ./mu/interface/dialogs.py:189
msgid "Python3 Environment"
msgstr "Python3 環境"

#: ./mu/interface/dialogs.py:194
msgid "BBC micro:bit Settings"
msgstr "BBC micro:bit 設定"

#: ./mu/interface/dialogs.py:223
msgid "Find / Replace"
msgstr "検索 / 置換"

#: ./mu/interface/dialogs.py:227
msgid "Find:"
msgstr "検索"

#: ./mu/interface/dialogs.py:233
msgid "Replace (optional):"
msgstr "置換(オプション)"

#: ./mu/interface/dialogs.py:239
msgid "Replace all?"
msgstr "すべて置換しますか？"

#: ./mu/interface/editor.py:222 ./mu/logic.py:960
msgid "untitled"
msgstr "無題"

#: ./mu/interface/main.py:68
msgid "Mode"
msgstr "モード"

#: ./mu/interface/main.py:69
msgid "Change Mu's mode of behaviour."
msgstr "Mu の動作モードを変更します。"

#: ./mu/interface/main.py:71
msgid "New"
msgstr "新規"

#: ./mu/interface/main.py:72
msgid "Create a new Python script."
msgstr "新しい MicroPython スクリプトを作成します。"

#: ./mu/interface/main.py:73
msgid "Load"
msgstr "開く"

#: ./mu/interface/main.py:74
msgid "Load a Python script."
msgstr "Python スクリプトを読み込みます。"

#: ./mu/interface/main.py:75
msgid "Save"
msgstr "保存"

#: ./mu/interface/main.py:76
msgid "Save the current Python script."
msgstr "現在の Python スクリプトを保存します。"

#: ./mu/interface/main.py:85
msgid "Zoom-in"
msgstr "拡大"

#: ./mu/interface/main.py:86
msgid "Zoom in (to make the text bigger)."
msgstr "拡大（文字を大きく）します。"

#: ./mu/interface/main.py:87
msgid "Zoom-out"
msgstr "縮小"

#: ./mu/interface/main.py:88
msgid "Zoom out (to make the text smaller)."
msgstr "縮小（文字を小さく）します。"

#: ./mu/interface/main.py:89
msgid "Theme"
msgstr "テーマ"

#: ./mu/interface/main.py:90
msgid "Toggle theme between day, night or high contrast."
msgstr "日中、夜、ハイコントラストのテーマを切り替えます。"

#: ./mu/interface/main.py:93
msgid "Check"
msgstr "チェック"

#: ./mu/interface/main.py:94
msgid "Check your code for mistakes."
msgstr "コードの間違いをチェックします。"

#: ./mu/interface/main.py:95
msgid "Help"
msgstr "ヘルプ"

#: ./mu/interface/main.py:96
msgid "Show help about Mu in a browser."
msgstr "Mu のヘルプをWebブラウザで表示します。"

#: ./mu/interface/main.py:97
msgid "Quit"
msgstr "終了"

#: ./mu/interface/main.py:98
msgid "Quit Mu."
msgstr "Mu を終了します。"

#: ./mu/interface/main.py:177
msgid "Mu {}"
msgstr ""

#: ./mu/interface/main.py:353
msgid "Cannot connect to device on port {}"
msgstr "ポート {} でデバイスに接続できません"

#: ./mu/interface/main.py:375
msgid "Filesystem on micro:bit"
msgstr "micro:bit のファイルシステム"

#: ./mu/interface/main.py:434
msgid "Python3 data tuple"
msgstr "Python3 データタプル"

#: ./mu/interface/main.py:446
msgid "Python3 (Jupyter)"
msgstr ""

#: ./mu/interface/main.py:453
msgid "{} REPL"
msgstr ""

#: ./mu/interface/main.py:469
msgid "{} Plotter"
msgstr "{} プロッター"

#: ./mu/interface/main.py:510
msgid "Running: {}"
msgstr "実行中: {}"

#: ./mu/interface/main.py:534
msgid "Debug Inspector"
msgstr "デバッグインスペクタ"

#: ./mu/interface/main.py:552
msgid "Name"
msgstr "名前"

#: ./mu/interface/main.py:552
msgid "Value"
msgstr "値"

#: ./mu/interface/main.py:569
msgid "(A list of {} items.)"
msgstr "(項目 {} のリスト。)"

#: ./mu/interface/main.py:581
msgid "(A dict of {} items.)"
msgstr "(項目 {} の辞書。)"

#: ./mu/interface/main.py:718
msgid "Mu"
msgstr ""

#: ./mu/interface/main.py:967
msgid "Mu's current mode of behaviour."
msgstr "Mu の現在の動作モード。"

#: ./mu/interface/panes.py:296
msgid "File already exists; overwrite it?"
msgstr "ファイルが既にあります。上書きしますか？"

#: ./mu/interface/panes.py:297
msgid "File already exists"
msgstr "ファイルが既にあります"

#: ./mu/interface/panes.py:325
msgid "Copying '{}' to micro:bit."
msgstr "micro:bit にコピー中。"

#: ./mu/interface/panes.py:334
msgid "'{}' successfully copied to micro:bit."
msgstr "'{}' micro:bit へのコピーが成功しました。"

#: ./mu/interface/panes.py:340
msgid "Delete (cannot be undone)"
msgstr "削除 (元に戻せません)"

#: ./mu/interface/panes.py:346
msgid "Deleting '{}' from micro:bit."
msgstr "micro:bit から '{}' を削除中。"

#: ./mu/interface/panes.py:355
msgid "'{}' successfully deleted from micro:bit."
msgstr "'{}' micro:bit から '{}' の削除が成功しました。"

#: ./mu/interface/panes.py:385
msgid "Getting '{}' from micro:bit. Copying to '{}'."
msgstr "micro:bit から '{}' を取得中。{} にコピー中。"

#: ./mu/interface/panes.py:396
msgid "Successfully copied '{}' from the micro:bit to your computer."
msgstr "micro:bit からコンピュータへの '{}' のコピーが成功しました。"

msgid "Deleting '{}' from device."
msgstr "デバイスから '{}' を削除中。"

msgid "'{}' successfully deleted from device."
msgstr "'{}' デバイスから '{}' の削除が成功しました。"

msgid "Getting '{}' from device. Copying to '{}'."
msgstr "デバイスから '{}' を取得中。{} にコピー中。"

msgid "Successfully copied '{}' from the device to your computer."
msgstr "デバイスからコンピュータへの '{}' のコピーが成功しました。"

#: ./mu/interface/panes.py:409
msgid "Open in Mu"
msgstr "Mu で開く"

#: ./mu/interface/panes.py:411
msgid "Open"
msgstr "開く"

#: ./mu/interface/panes.py:417
msgid "Opening '{}'"
msgstr "開き中 '{}'"

#: ./mu/interface/panes.py:457
msgid "Files on your micro:bit:"
msgstr "micro:bit のファイル:"

#: ./mu/interface/panes.py:459
msgid "Files on your computer:"
msgstr "コンピュータのファイル:"

#: ./mu/interface/panes.py:527
msgid "There was a problem getting the list of files on the micro:bit. Please check Mu's logs for technical information. Alternatively, try unplugging/plugging-in your micro:bit and/or restarting Mu."
msgstr ""
"micro:bit 内のファイルのリストを取得する際に問題が発生しました。"
"技術的な情報は Mu のログを確認してください。または micro:bit の"
"プラグを抜き差しするか、Muを再起動してみてください。"

#: ./mu/interface/panes.py:538
msgid "There was a problem copying the file '{}' onto the micro:bit. Please check Mu's logs for more information."
msgstr ""
"micro:bit にファイル '{}' をコピーしている際に問題が発生しました。"
"詳しくは Mu のログを確認してください。"

#: ./mu/interface/panes.py:546
msgid "There was a problem deleting '{}' from the micro:bit. Please check Mu's logs for more information."
msgstr ""
"micro:bit 内のファイル '{}' を削除している際にに問題が発生しました。"
"詳しくは Mu のログを確認してください。"

#: ./mu/interface/panes.py:554
msgid "There was a problem getting '{}' from the micro:bit. Please check Mu's logs for more information."
msgstr ""
"micro:bit 内のファイル '{}' を取得している際に問題が発生しました。"
"詳しくは Mu のログを確認してください。"

msgid "There was a problem getting the list of files on the device. Please check Mu's logs for technical information. Alternatively, try unplugging/plugging-in your device and/or restarting Mu."
msgstr "デバイス内のファイルのリストを取得する際に問題が発生しました。技術的な情報は Mu のログを確認してください。またはデバイスのプラグを抜き差しするか、Muを再起動してみてください。"

msgid "There was a problem copying the file '{}' onto the device. Please check Mu's logs for more information."
msgstr ""
"デバイスにファイル '{}' をコピーしている際に問題が発生しました。"
"詳しくは Mu のログを確認してください。"

msgid "There was a problem deleting '{}' from the device. Please check Mu's logs for more information."
msgstr ""
"デバイス内のファイル '{}' を削除している際にに問題が発生しました。"
"詳しくは Mu のログを確認してください。"

msgid "There was a problem getting '{}' from the device. Please check Mu's logs for more information."
msgstr ""
"デバイス内のファイル '{}' を取得している際に問題が発生しました。"
"詳しくは Mu のログを確認してください。"

#: ./mu/logic.py:69
msgid "Hello, World!"
msgstr ""

#: ./mu/logic.py:70
msgid "This editor is free software written in Python. You can modify it, add features or fix bugs if you like."
msgstr "このエディタは Python で作成したフリーソフトウェアです。あなたの好きなように変更、機能追加、バグ修正できます。"

#: ./mu/logic.py:72
msgid "This editor is called Mu (you say it 'mew' or 'moo')."
msgstr "このエディタの名前は Mu です('mew' とか 'moo' とか発音します)。"

#: ./mu/logic.py:73
msgid "Google, Facebook, NASA, Pixar, Disney and many more use Python."
msgstr "Google, Facebook, NASA, Pixar, Disney など多くが Python を使っている。"

#: ./mu/logic.py:74
msgid "Programming is a form of magic. Learn to cast the right spells with code and you'll be a wizard."
msgstr "プログラミングは魔法の一種。正しいスペルをコードで書く方法を学ぶと魔法使いになれる。"

#: ./mu/logic.py:76
msgid "REPL stands for read, evaluate, print, loop. It's a fun way to talk to your computer! :-)"
msgstr "REPLは、read (読む)、evaluate (評価)、print (印字)、loop (ループ)の略。 それはあなたのコンピュータと話す楽しい手段です！ :-)"

#: ./mu/logic.py:78
msgid "Be brave, break things, learn and have fun!"
msgstr "勇気を出そう、前に進もう、学び、楽しもう！"

#: ./mu/logic.py:79
msgid "Make your software both useful AND fun. Empower your users."
msgstr "ソフトウェアを便利で楽しいものにしよう。それがユーザの助けになるのです。"

#: ./mu/logic.py:80
msgid "For the Zen of Python: import this"
msgstr "Zen of Python を見る方法: import this"

#: ./mu/logic.py:81
msgid "Diversity promotes creativity."
msgstr "多様性は創造性を促進する。"

#: ./mu/logic.py:82
msgid "An open mind, spirit of adventure and respect for diversity are key."
msgstr "開かれた心、冒険の精神、多様性の尊重が重要です。"

#: ./mu/logic.py:83
msgid "Don't worry if it doesn't work. Learn the lesson, fix it and try again! :-)"
msgstr "動作しなくても心配するな。その失敗から学び、修正してやり直すのだ！ :-)"

#: ./mu/logic.py:85
msgid "Coding is collaboration."
msgstr "コーディングはコラボレーションである。"

#: ./mu/logic.py:86
msgid "Compliment and amplify the good things with code."
msgstr "コードのよいところに感謝し、それを広めよう。"

#: ./mu/logic.py:87
msgid "In theory, theory and practice are the same. In practice, they're not. ;-)"
msgstr "理論的には理論と実践は同じであるが、実践的にはそうではない。 ;-)"

#: ./mu/logic.py:89
msgid "Debugging is twice as hard as writing the code in the first place."
msgstr "デバッグ作業は、最初にコードを書くときよりも倍難しい。"

#: ./mu/logic.py:90
msgid "It's fun to program."
msgstr "プログラミングは楽しい。"

#: ./mu/logic.py:91
msgid "Programming has more to do with problem solving than writing code."
msgstr "プログラミングとは、コードを書くだけにあらず、問題解決するということである。"

#: ./mu/logic.py:92
msgid "Start with your users' needs."
msgstr "ユーザのニーズから始めなさい。"

#: ./mu/logic.py:93
msgid "Try to see things from your users' point of view."
msgstr "ユーザの視点から物事を見てください。"

#: ./mu/logic.py:94
msgid "Put yourself in your users' shoes."
msgstr "ユーザの立場で考えてください。"

#: ./mu/logic.py:95
msgid "Explaining a programming problem to a friend often reveals the solution. :-)"
msgstr "友人にプログラムの問題の問題を説明することで、解決策が明らかになることはよくある。 :-)"

#: ./mu/logic.py:97
msgid "If you don't know, ask. Nobody to ask? Just look it up."
msgstr "分からないことがあるなら質問してください。質問はありませんか？"

#: ./mu/logic.py:98
msgid "Complexity is the enemy. KISS - keep it simple, stupid!"
msgstr "複雑さは敵である。KISS - keep it simple, stupid! (単純にしておけ、この間抜け！)"

#: ./mu/logic.py:99
msgid "Beautiful is better than ugly."
msgstr "醜いより美しいほうがいい。"

#: ./mu/logic.py:100
msgid "Explicit is better than implicit."
msgstr "暗示するより明示するほうがいい。"

#: ./mu/logic.py:101
msgid "Simple is better than complex. Complex is better than complicated."
msgstr "複雑であるよりは平易であるほうがいい。それでも、込み入っているよりは複雑であるほうがまし。"

#: ./mu/logic.py:102
msgid "Flat is better than nested."
msgstr "ネストは浅いほうがいい。"

#: ./mu/logic.py:103
msgid "Sparse is better than dense."
msgstr "密集しているよりは隙間があるほうがいい。"

#: ./mu/logic.py:104
msgid "Readability counts."
msgstr "読みやすいことは善である。"

#: ./mu/logic.py:105
msgid "Special cases aren't special enough to break the rules. Although practicality beats purity."
msgstr "特殊であることはルールを破る理由にならない。しかし、実用性を求めると自然さが失われることがある。"

#: ./mu/logic.py:107
msgid "Errors should never pass silently. Unless explicitly silenced."
msgstr "エラーは隠すな、無視するな。ただし、わざと隠されているのなら見逃せ。"

#: ./mu/logic.py:108
msgid "In the face of ambiguity, refuse the temptation to guess."
msgstr "曖昧なものに出逢ったら、その意味を適当に推測してはいけない。"

#: ./mu/logic.py:109
msgid "There should be one-- and preferably only one --obvious way to do it."
msgstr "たったひとつの冴えたやりかたがあるはずだ。"

#: ./mu/logic.py:110
msgid "Now is better than never. Although never is often better than *right* now."
msgstr "ずっとやらないでいるよりは、今やれ。でも、今\"すぐ\"にやるよりはやらないほうがマシなことが多い。"

#: ./mu/logic.py:112
msgid "If the implementation is hard to explain, it's a bad idea."
msgstr "コードの内容を説明するのが難しいのなら、それは悪い実装である。"

#: ./mu/logic.py:113
msgid "If the implementation is easy to explain, it may be a good idea."
msgstr "コードの内容を容易に説明できるのなら、おそらくそれはよい実装である。"

#: ./mu/logic.py:114
msgid "Namespaces are one honking great idea -- let's do more of those!"
msgstr "名前空間は優れたアイデアであるため、積極的に利用すべきである。"

#: ./mu/logic.py:115
msgid "Mu was created by Nicholas H.Tollervey."
msgstr "Mu は Nicholas H.Tollervey が作成しました。"

#: ./mu/logic.py:116
msgid "To understand what recursion is, you must first understand recursion."
msgstr "再帰とは何かを理解するためには、まず再帰を理解する必要がある。"

#: ./mu/logic.py:117
msgid "Algorithm: a word used by programmers when they don't want to explain what they did."
msgstr "アルゴリズム: プログラマーが何をしているかを説明したくないときに使う言葉。"

#: ./mu/logic.py:119
msgid "Programmers count from zero."
msgstr "プログラマーはゼロから数える。"

#: ./mu/logic.py:120
msgid "Simplicity is the ultimate sophistication."
msgstr "単純であることは究極の洗練である。 "

#: ./mu/logic.py:121
msgid "A good programmer is humble."
msgstr "優れたプログラマーは謙虚である。"

#: ./mu/logic.py:122
msgid "A good programmer is playful."
msgstr "優れたプログラマーには遊び心がある。"

#: ./mu/logic.py:123
msgid "A good programmer learns to learn."
msgstr "優れたプログラマーは学ぶことを学ぶ。"

#: ./mu/logic.py:124
msgid "A good programmer thinks beyond the obvious."
msgstr "優れたプログラマーは当たり前の一つ上を考えている。"

#: ./mu/logic.py:125
msgid "A good programmer promotes simplicity."
msgstr "優れたプログラマーは単純さを推し進める。"

#: ./mu/logic.py:126
msgid "A good programmer avoids complexity."
msgstr "優れたプログラマーは複雑さを避ける。"

#: ./mu/logic.py:127
msgid "A good programmer is patient."
msgstr "優れたプログラマーは病気である。"

#: ./mu/logic.py:128
msgid "A good programmer asks questions."
msgstr "優れたプログラマーは問いかける。"

#: ./mu/logic.py:129
msgid "A good programmer is willing to say, 'I don't know'."
msgstr "優れたプログラマーは「わからない」と言っても構わない。"

#: ./mu/logic.py:130
msgid "Wisest are they that know they know nothing."
msgstr "賢明であるとは、知らないことを知っていることである。"

#: ./mu/logic.py:442
msgid " above this line"
msgstr " この行の上"

#: ./mu/logic.py:487
msgid "Syntax error. Python cannot understand this line. Check for missing characters!"
msgstr "文法エラー。Python はこの行を理解できません。間違った綴りがないか調べてください！"

#: ./mu/logic.py:677
msgid "# Write your code here :-)"
msgstr "# ここにコードを書いてね :-)"

#: ./mu/logic.py:715
msgid ""
"The file contains characters Mu expects to be encoded as {0} or as the computer's default encoding {1}, but which are encoded in some other way.\n"
"\n"
"If this file was saved in another application, re-save the file via the 'Save as' option and set the encoding to {0}"
msgstr ""
"Mu が前提としているファイルエンコーディングは {0} かコンピュータのデフォルトの {1} ですが、他の方法でエンコードされています。"
"\n"
"このファイルが別のアプリケーションで保存されたのであれば、「別名で保存」オプションでエンコーディングを {0} を設定して再保存してください。"

#: ./mu/logic.py:731
msgid "The file \"{}\" is already open."
msgstr "ファイル \"{}\" は既に開いています。"

#: ./mu/logic.py:743
msgid "Mu cannot read the characters in {}"
msgstr "Mu は {} の文字を読み込めませんでした。"

#: ./mu/logic.py:766
msgid "Mu was not able to open this file"
msgstr "Mu はこのファイルを開けませんでした"

#: ./mu/logic.py:767
msgid "Currently Mu only works with Python source files or hex files created with embedded MicroPython code."
msgstr "現在のところ Mu は Python ソースファイルまたは MicroPython コードが埋め込まれた hex ファイルだけを扱えます。"

#: ./mu/logic.py:773
msgid "Could not load {}"
msgstr "ファイル {} を読み込めません。"

#: ./mu/logic.py:775
msgid ""
"Does this file exist?\n"
"If it does, do you have permission to read it?\n"
"\n"
"Please check and try again."
msgstr ""
"このファイルは存在しますか？\n"
"存在していても読込み権限があるでしょうか？\n"
"\n"
"以上を確認して、再度試してみてください。"

#: ./mu/logic.py:781
msgid "Is this a {} file?"
msgstr "これは {} ファイルですか？"

#: ./mu/logic.py:782
msgid ""
"It looks like this could be a {} file.\n"
"\n"
"Would you like to change Mu to the {}mode?"
msgstr ""
"これは {} ファイルのようです。\n"
"\n"
"Mu を {} モードに変更しますか？"

#: ./mu/logic.py:854
msgid "Could not save file (disk problem)"
msgstr "ファイルを保存できませんでした(ディスクの問題)。"

#: ./mu/logic.py:855
msgid "Error saving file to disk. Ensure you have permission to write the file and sufficient disk space."
msgstr "ディスクへのファイルの保存でエラーになりました。ファイルの書込み権とディスクの空きが十分にあるかを確認してください。"

#: ./mu/logic.py:859
msgid "Could not save file (encoding problem)"
msgstr "ファイルを保存できませんでした(エンコーディングの問題)。"

#: ./mu/logic.py:861
msgid "Unable to convert all the characters. If you have an encoding line at the top of the file, remove it and try again."
msgstr "すべての文字を変換できませんでした。ファイルの先頭にエンコーディング行がある場合は、それを削除してもう一度やり直してください。"

#: ./mu/logic.py:870
msgid "Saved file: {}"
msgstr "保存したファイル: {}"

#: ./mu/logic.py:899 ./mu/logic.py:1237
msgid "You cannot use the filename \"{}\""
msgstr "ファイル名 \"{}\" は使えません"

#: ./mu/logic.py:901
msgid "This name is already used by another part of Python. If you use this name, things are likely to break. Please try again with a different filename."
msgstr "この名前はすでに Python の別のところで使われています。この名前を使うと Python のシステムを壊してしまう可能性があります。別のファイル名でもう一度やり直してください。"

#: ./mu/logic.py:976
msgid "Good job! No problems found."
msgstr "よくできました！ 問題は見つかりませんでした。"

#: ./mu/logic.py:977
msgid "Hurrah! Checker turned up no problems."
msgstr "バンザイ！ チェッカは問題を検出しませんでした。"

#: ./mu/logic.py:978
msgid "Nice one! Zero problems detected."
msgstr "良いですね！ 問題の検出はゼロです。"

#: ./mu/logic.py:979
msgid "Well done! No problems here."
msgstr "よくやりました！ 問題ありません。"

#: ./mu/logic.py:980
msgid "Awesome! Zero problems found."
msgstr "驚ろきました！ 問題は何も見つかりません。"

#: ./mu/logic.py:1007
msgid "There is un-saved work, exiting the application will cause you to lose it."
msgstr "保存していないスクリプトがありますが、アプリケーションを終了すると消えてしまいます。"

#: ./mu/logic.py:1060
msgid "Could not find MicroPython runtime."
msgstr "MicroPython ランタイムが見つかりません。"

#: ./mu/logic.py:1061
msgid "The micro:bit runtime you specified ('{}') does not exist. Please try again."
msgstr "指定した micro:bit ランタイムは存在しません。もう一度やり直してください。"

#: ./mu/logic.py:1131
msgid "Changed to {} mode."
msgstr "モードを {} に変更します。"

#: ./mu/logic.py:1176
msgid "Detected new {} device."
msgstr "新規の {} デバイスを検出しました。"

#: ./mu/logic.py:1183
msgid "Would you like to change Mu to the {} mode?"
msgstr "Mu を {} モードに変更しますか？"

#: ./mu/logic.py:1218
msgid "Cannot Set Breakpoint."
msgstr "ブレイクポイントを設定できません。"

#: ./mu/logic.py:1219
msgid "Lines that are comments or some multi-line statements cannot have breakpoints."
msgstr "コメント行や複数行のステートメントの一部はブレイクポイントに設定できません。"

#: ./mu/logic.py:1239
msgid "This name is already used by another part of Python. If you use that name, things are likely to break. Please try again with a different filename."
msgstr "この名前はすでに Python の別のところで使われています。この名前を使うと Python のシステムを壊してしまう可能性があります。別のファイル名でもう一度やり直してください。"

#: ./mu/logic.py:1256
msgid "Could not rename file."
msgstr "ファイル名を変更できませんでした。"

#: ./mu/logic.py:1257
msgid "A file of that name is already open in Mu."
msgstr "この名前のファイルは Mu で既に開いています。"

#: ./mu/logic.py:1286
msgid "Replaced \"{}\" with \"{}\"."
msgstr "\"{}\" を \"{}\" で置換する。"

#: ./mu/logic.py:1290
msgid "Replaced {} matches of \"{}\" with \"{}\"."
msgstr "{} 個の \"{}\" を \"{}\" で置換しました。"

#: ./mu/logic.py:1295 ./mu/logic.py:1302
msgid "Could not find \"{}\"."
msgstr "\"{}\" が見つかりませんでした。"

#: ./mu/logic.py:1300
msgid "Highlighting matches for \"{}\"."
msgstr "検索した \"{}\" を強調表示しました。"

#: ./mu/logic.py:1305
msgid "You must provide something to find."
msgstr "検索するものを指定してください。"

#: ./mu/logic.py:1306
msgid "Please try again, this time with something in the find box."
msgstr "今度は検索ボックスに何かを入れて、もう一度お試しください。"

#: ./mu/modes/adafruit.py:32
msgid "Adafruit CircuitPython"
msgstr ""

#: ./mu/modes/adafruit.py:33
msgid "Use CircuitPython on Adafruit's line of boards."
msgstr "Adafruit がサポートするボードの CircuitPython を使います。"

#: ./mu/modes/adafruit.py:64
msgid "Serial"
msgstr "シリアル"

#: ./mu/modes/adafruit.py:65
msgid "Open a serial connection to your device."
msgstr "デバイスへのシリアル接続を開きます。"

#: ./mu/modes/adafruit.py:72 ./mu/modes/microbit.py:215
#: ./mu/modes/python3.py:136
msgid "Plotter"
msgstr "プロッター"

#: ./mu/modes/adafruit.py:73 ./mu/modes/microbit.py:216
msgid "Plot incoming REPL data."
msgstr "REPL 入力のデータをプロットします。"

#: ./mu/modes/adafruit.py:143
msgid "Could not find an attached Adafruit CircuitPython device."
msgstr "CircuitPython デバイスが繋げられていないようです。"

#: ./mu/modes/adafruit.py:145
msgid ""
"Python files for Adafruit CircuitPython devices are stored on the device. Therefore, to edit these files you need to have the device plugged in. Until you plug in a device, Mu will use the directory found here:\n"
"\n"
" {}\n"
"\n"
"...to store your code."
msgstr ""
"Adafruit CircuitPython デバイスの Python ファイルはデバイス内に保存するので、"
"デバイスが接続されている必要があります。デバイスを接続するまで、Mu はコードを保存"
"するために次のディレクトリを使います:\n"
"\n"
" {}"

#: ./mu/modes/base.py:169
msgid "Data Flood Detected!"
msgstr "データの氾濫を検出しました！"

#: ./mu/modes/base.py:170
msgid ""
"The plotter is flooded with data which will make Mu unresponsive and freeze. As a safeguard, the plotter has been stopped.\n"
"\n"
"Flooding is when chunks of data of more than 1024 bytes are repeatedly sent to the plotter.\n"
"\n"
"To fix this, make sure your code prints small tuples of data between calls to 'sleep' for a very short period of time."
msgstr ""
"Mu が無反応でフリーズしてしまうぐらいのデータが溢れています。セーフガードとしてプロッタを停止させました。\n"
"\n"
"溢れているとは、1024バイトを超えるデータセットがプロッターに繰り返し送信されている状態です。\n"
"\n"
"これを解決するには、非常に短時間の 'sleep' 呼び出しの合間にデータの小さなタプルをプリントするようにしてください。"

#: ./mu/modes/base.py:262 ./mu/modes/base.py:301
msgid "Click on the device's reset button, wait a few seconds and then try again."
msgstr "デバイスのリセットボタンを押して数秒待った後に再度試してください。"

#: ./mu/modes/base.py:268 ./mu/modes/base.py:307
msgid "Could not find an attached device."
msgstr "デバイスが繋げられていないようです。"

#: ./mu/modes/base.py:269
msgid ""
"Please make sure the device is plugged into this computer.\n"
"\n"
"It must have a version of MicroPython (or CircuitPython) flashed onto it before the REPL will work.\n"
"\n"
"Finally, press the device's reset button and wait a few seconds before trying again."
msgstr ""
"デバイスがこのコンピュータに繋げられているかを確認してください。\n"
"\n"
"REPL が動作するには、MicroPython (または CircuitPython)がデバイスに転送されている必要が"
"あります。\n"
"\n"
"最後に、デバイスのリセットボタンを押してから、もう一度試して"
"ください。"

#: ./mu/modes/base.py:308
msgid ""
"Please make sure the device is plugged into this computer.\n"
"\n"
"It must have a version of MicroPython (or CircuitPython) flashed onto it before the Plotter will work.\n"
"\n"
"Finally, press the device's reset button and wait a few seconds before trying again."
msgstr ""
"デバイスがこのコンピュータに繋げられているかを確認してください。\n"
"\n"
"プロッターが動作するには、MicroPython (または CircuitPython)がデバイスに転送されている必要が"
"あります。\n"
"\n"
"最後に、デバイスのリセットボタンを押してから、もう一度試して"
"ください。"

#: ./mu/modes/debugger.py:35
msgid "Graphical Debugger"
msgstr "グラフィカルデバッガ"

#: ./mu/modes/debugger.py:36
msgid "Debug your Python 3 code."
msgstr "Python 3 コードをデバッグします。"

#: ./mu/modes/debugger.py:50 ./mu/modes/pygamezero.py:109
#: ./mu/modes/python3.py:166
msgid "Stop"
msgstr "停止"

#: ./mu/modes/debugger.py:51
msgid "Stop the running code."
msgstr "コードの実行を停止します。"

#: ./mu/modes/debugger.py:57
msgid "Continue"
msgstr "継続"

#: ./mu/modes/debugger.py:58
msgid "Continue to run your Python script."
msgstr "Python スクリプトの実行を継続します。"

#: ./mu/modes/debugger.py:64
msgid "Step Over"
msgstr "ステップオーバー"

#: ./mu/modes/debugger.py:65
msgid "Step over a line of code."
msgstr "コードの１行をステップオーバーします。"

#: ./mu/modes/debugger.py:71
msgid "Step In"
msgstr "ステップイン"

#: ./mu/modes/debugger.py:72
msgid "Step into a function."
msgstr "関数にステップインします。"

#: ./mu/modes/debugger.py:78
msgid "Step Out"
msgstr "ステップアウト"

#: ./mu/modes/debugger.py:79
msgid "Step out of a function."
msgstr "関数からステップアウトします。"

#: ./mu/modes/debugger.py:156
msgid "Your script has finished running."
msgstr "スクリプトの実行を終了しました。"

#: ./mu/modes/debugger.py:224
msgid ""
"Unable to connect to the Python debugger.\n"
"\n"
msgstr ""
"Python デバッガに接続できません。\n"
"\n"

#: ./mu/modes/debugger.py:308
msgid "Debugger info: {}"
msgstr "デバッガ情報: {}"

#: ./mu/modes/debugger.py:314
msgid "Debugger warning: {}"
msgstr "デバッガ警告: {}"

#: ./mu/modes/debugger.py:321
msgid "Debugger error: {}"
msgstr "デバッガエラー: {}"

#: ./mu/modes/microbit.py:168
msgid "BBC micro:bit"
msgstr ""

#: ./mu/modes/microbit.py:169
msgid "Write MicroPython for the BBC micro:bit."
msgstr "BBC micro:bit の MicroPython を編集。"

#: ./mu/modes/microbit.py:192
msgid "Flash"
msgstr "転送"

#: ./mu/modes/microbit.py:193
msgid "Flash your code onto the micro:bit."
msgstr "コードを micro:bit に転送します。"

#: ./mu/modes/microbit.py:199
msgid "Files"
msgstr "ファイル"

#: ./mu/modes/microbit.py:200
msgid "Access the file system on the micro:bit."
msgstr "micro:bit にあるファイルにアクセスします。"

#: ./mu/modes/microbit.py:206 ./mu/modes/python3.py:127
msgid "REPL"
msgstr ""

#: ./mu/modes/microbit.py:207
msgid "Use the REPL to live-code on the micro:bit."
msgstr "micro:bit を対話モードで利用します。"

#: ./mu/modes/microbit.py:257
msgid "Unable to flash \"{}\""
msgstr "\"{}\" を転送できません"

#: ./mu/modes/microbit.py:267
msgid "Problem with script"
msgstr "スクリプトに問題があります"

#: ./mu/modes/microbit.py:268
msgid "{} [{}:{}]"
msgstr ""

#: ./mu/modes/microbit.py:278
msgid "Our minifier tried but your script is too long!"
msgstr "縮小しようとしましたが、スクリプトが長すぎます！"

#: ./mu/modes/microbit.py:283
msgid "Your script is too long and the minifier isn't available"
msgstr "スクリプトが長すぎて縮小できません"

#: ./mu/modes/microbit.py:288
msgid "Your script is too long!"
msgstr "スクリプトが長すぎます！"

#: ./mu/modes/microbit.py:358
msgid "Flashing \"{}\" onto the micro:bit."
msgstr "micro:bit に \"{}\" を転送中。"

#: ./mu/modes/microbit.py:360
msgid " Runtime: {}"
msgstr "ランタイム: {}"

#: ./mu/modes/microbit.py:403
msgid "Unsupported BBC micro:bit."
msgstr "未サポートの BBC micro:bit。"

#: ./mu/modes/microbit.py:404
msgid ""
"Your device is newer than this version of Mu. Please update Mu to the latest version to support this device.\n"
"\n"
"https://codewith.mu/"
msgstr ""
"デバイスがこの Mu のバージョンで扱うには新しすぎます。このデバイスをサポートするために Mu を最新バージョンにアップデートしてください。\n"
"\n"
"https://codewith.mu/"

#: ./mu/modes/microbit.py:440 ./mu/modes/microbit.py:576
msgid "Could not find an attached BBC micro:bit."
msgstr "BBC micro:bit が繋げられていないようです"

#: ./mu/modes/microbit.py:441
msgid "Please ensure you leave enough time for the BBC micro:bit to be attached and configured correctly by your computer. This may take several seconds. Alternatively, try removing and re-attaching the device or saving your work and restarting Mu if the device remains unfound."
msgstr ""
"BBC micro:bit を正しく繋げている場合でも、コンピュータがそれを認識するのに十分な時間を"
"おいてください。これには数秒かかることがあります。それでもデバイスが認識"
"されない場合は、デバイス一度取り外して再度繋げるか、スクリプトを保存して "
"Mu を再起動してみてください。"

#: ./mu/modes/microbit.py:455
msgid "Finished flashing."
msgstr "転送を完了しました。"

#: ./mu/modes/microbit.py:476
#: ./mu/modes/microbit.py:490
msgid "Copied code onto micro:bit."
msgstr "micro:bit にコードをコピーしました。"

#: ./mu/modes/microbit.py:499
msgid "There was a problem flashing the micro:bit."
msgstr "micro:bit への転送で問題が発生しました。"

#: ./mu/modes/microbit.py:500
msgid "Please do not disconnect the device until flashing has completed. Please check the logs for more information."
msgstr ""
"転送が完了するまでデバイスを取り外さないでください。"
"詳しくは Mu のログを確認してください。"

#: ./mu/modes/microbit.py:521
msgid "REPL and file system cannot work at the same time."
msgstr "REPL とファイルシステムは同時に利用できません。"

#: ./mu/modes/microbit.py:522
msgid "The REPL and file system both use the same USB serial connection. Only one can be active at any time. Toggle the file system off and try again."
msgstr ""
"REPL とファイルシステムはどちらも USB シリアル接続を利用しますが、有効にできるのは常に"
"どちらか一方です。ファイルシステムの利用を止めて、もう一度試してください。"

#: ./mu/modes/microbit.py:539
msgid "The plotter and file system cannot work at the same time."
msgstr "プロッターとファイルシステムは同時に利用できません。"

#: ./mu/modes/microbit.py:541
msgid "The plotter and file system both use the same USB serial connection. Only one can be active at any time. Toggle the file system off and try again."
msgstr ""
"プロッターとファイルシステムはどちらも USB シリアル接続を利用しますが、有効にできるのは常に"
"どちらか一方です。ファイルシステムの利用を止めて、もう一度試してください。"

#: ./mu/modes/microbit.py:553
msgid "File system cannot work at the same time as the REPL or plotter."
msgstr "ファイルシステムは REPL やプロッターと同時に利用できません。"

#: ./mu/modes/microbit.py:555
msgid "The file system and the REPL and plotter use the same USB serial connection. Toggle the REPL and plotter off and try again."
msgstr ""
"ファイルシステムと REPL とプロッターは同じ USB シリアル接続を利用します。"
"REPL とプロッターの利用を止めて、再度試してください。"

#: ./mu/modes/microbit.py:577
msgid ""
"Please make sure the device is plugged into this computer.\n"
"\n"
"The device must have MicroPython flashed onto it before the file system will work.\n"
"\n"
"Finally, press the device's reset button and wait a few seconds before trying again."
msgstr ""
"デバイスがこのコンピュータに繋げられているかを確認してください。\n"
"\n"
"ファイルシステムが動作するには、MicroPython がデバイスに転送されている必要が"
"あります。\n"
"\n"
"最後に、デバイスのリセットボタンを押してから、再度試してください。"

#: ./mu/modes/pygamezero.py:35
msgid "Pygame Zero"
msgstr ""

#: ./mu/modes/pygamezero.py:36
msgid "Make games with Pygame Zero."
msgstr "Pygame Zero でゲームを作成します。"

#: ./mu/modes/pygamezero.py:51 ./mu/modes/pygamezero.py:101
msgid "Play"
msgstr "プレイ"

#: ./mu/modes/pygamezero.py:52 ./mu/modes/pygamezero.py:102
msgid "Play your Pygame Zero game."
msgstr "Pygame Zero ゲームをプレイします。"

#: ./mu/modes/pygamezero.py:58
msgid "Images"
msgstr "イメージ"

#: ./mu/modes/pygamezero.py:59
msgid "Show the images used by Pygame Zero."
msgstr "Pygame で使うイメージを表示します。"

#: ./mu/modes/pygamezero.py:65
msgid "Fonts"
msgstr "フォント"

#: ./mu/modes/pygamezero.py:66
msgid "Show the fonts used by Pygame Zero."
msgstr "Pygame Zero で使うフォントを表示します。"

#: ./mu/modes/pygamezero.py:72
msgid "Sounds"
msgstr "効果音"

#: ./mu/modes/pygamezero.py:73
msgid "Show the sounds used by Pygame Zero."
msgstr "Pygame Zero で使う効果音を表示します。"

#: ./mu/modes/pygamezero.py:79
msgid "Music"
msgstr "音楽"

#: ./mu/modes/pygamezero.py:80
msgid "Show the music used by Pygame Zero."
msgstr "Pygame Zero で使う音楽を表示します。"

#: ./mu/modes/pygamezero.py:110
msgid "Stop your Pygame Zero game."
msgstr "Pygame Zero ゲームを停止します。"

#: ./mu/modes/python3.py:97
msgid "Python 3"
msgstr ""

#: ./mu/modes/python3.py:98
msgid "Create code using standard Python 3."
msgstr "標準 Python 3 のコードを作成します。"

#: ./mu/modes/python3.py:113 ./mu/modes/python3.py:158
msgid "Run"
msgstr "実行"

#: ./mu/modes/python3.py:114 ./mu/modes/python3.py:159
msgid "Run your Python script."
msgstr "Python スクリプトを実行します。"

#: ./mu/modes/python3.py:120
msgid "Debug"
msgstr "デバッグ"

#: ./mu/modes/python3.py:121
msgid "Debug your Python script."
msgstr "Python スクリプトをデバッグします。"

#: ./mu/modes/python3.py:128
msgid "Use the REPL for live coding."
msgstr "ライブコーディングのために REPL を利用します。"

#: ./mu/modes/python3.py:137
msgid "Plot data from your script or the REPL."
msgstr "スクリプトまたは REPL からのデータをプロットします。"

#: ./mu/modes/python3.py:167
msgid "Stop your Python script."
msgstr "Python スクリプトを停止します。"

#: ./mu/modes/python3.py:230
msgid "Starting iPython REPL."
msgstr "iPython REPL を始動します。"

#: ./mu/modes/python3.py:234
msgid "Stopping iPython REPL (this may take a short amount of time)."
msgstr "iPython REPL を停止(少し時間がかかります)。"

#: ./mu/modes/python3.py:319
msgid "REPL started."
msgstr "REPL が始動しました。"

#: ./mu/modes/python3.py:328
msgid "REPL stopped."
msgstr "REPL が停止しました。"

#: ./mu/modes/python3.py:328
msgid "REPL stopped."
msgstr "REPL が停止しました。"

#: ./mu/interface/panes.py:457
msgid "Files on your device:"
msgstr "デバイス のファイル:"

#: ./mu/modes/api/studuinobit.py
msgid "pystubit.board.button_a.is_pressed() \nIf button A is pressed down, is_pressed() is True, else False."
msgstr "pystubit.board.button_a.is_pressed() \nボタンAが押されている場合はTrue、そうでない場合はFalseを返します。"

msgid "pystubit.board.button_a.was_pressed() \nUse was_pressed() to learn if button A was pressed since the last time\nwas_pressed() was called. Returns True or False, then resets the record."
msgstr "pystubit.board.button_a.was_pressed() \nボタンAが過去に押されたかどうかを調べるのに使用します。\nボタンが押された場合はTrue、そうでない場合はFalseを返します。\n本関数コール後、ボタンが押されたかどうかの情報はリセットされます。"

msgid "pystubit.board.button_a.get_presses() \nUse get_presses() to get the running total of button presses, and also\nreset this counter to zero."
msgstr "pystubit.board.button_a.get_presses() \nボタンAが過去に押された回数を調べるのに使用します。\n本関数コール後、カウンタはリセットされます。"

msgid "pystubit.board.button_a.get_value() \nIf button A is pressed down, get_value() is 0, else 1."
msgstr "pystubit.board.button_a.get_value() \nボタンAが押されている場合は0、そうでない場合は1を返します。"

msgid "pystubit.board.button_b.is_pressed() \nIf button B is pressed down, is_pressed() is True, else False."
msgstr "pystubit.board.button_b.is_pressed() \nボタンBが押されている場合はTrue、そうでない場合はFalseを返します。"

msgid "pystubit.board.button_b.was_pressed() \nUse was_pressed() to learn if button B was pressed since the last time\nwas_pressed() was called. Returns True or False, then resets the record."
msgstr "pystubit.board.button_b.was_pressed() \nボタンBが過去に押されたかどうかを調べるのに使用します。\nボタンが押された場合はTrue、そうでない場合はFalseを返します。\n本関数コール後、ボタンが押されたかどうかの情報はリセットされます。"

msgid "pystubit.board.button_b.get_presses() \nUse get_presses() to get the running total of button presses, and also\nreset this counter to zero."
msgstr "pystubit.board.button_b.get_presses() \nボタンBが過去に押された回数を調べるのに使用します。\n本関数コール後、カウンタはリセットされます。"

msgid "pystubit.board.button_b.get_value() \nIf button B is pressed down, get_value() is 0, else 1."
msgstr "pystubit.board.button_b.get_value() \nボタンBが押されている場合は0、そうでない場合は1を返します。"

msgid "pystubit.board.display.get_pixel(x, y)\nUse get_pixel(x, y) to return the display's color at LED pixel (x,y) in an (R, G, B) tuple.\nReturns values from (0, 0, 0) to (31, 31, 31)."
msgstr "pystubit.board.display.get_pixel(x, y) \nLEDディスプレイの(x, y)にあるLEDの色を(R, G, B)のタプルで返します。\n戻り値の型は(0, 0, 0)～(31, 31, 31)です。"

msgid "pystubit.board.display.set_pixel(x, y, color)\nUse set_pixel(x, y, color) to set the display color at LED pixel (x,y).\nUse a tuple (R,G,B), list [R,G,B] or integer #RGB in 'color' to set the LED's color. "
msgstr "pystubit.board.display.set_pixel(x, y, color) \nLEDディスプレイの(x, y)にあるLEDの色を'color'で設定します。\n'color'は、タプル(R,G,B), リスト[R,G,B], 整数#RGBで指定できます。"

msgid "pystubit.board.display.clear()\nUse clear() to clear the display."
msgstr "pystubit.board.display.clear() \nすべての LED の明るさを 0 (オフ)に設定します。"

msgid "pystubit.board.display.show(x, delay=400, wait=True, loop=False, clear=False, color=None)\nUse show(x) to print a string or image to the display. If 'x' is a list\nof images they will be animated together.\nUse 'delay' to specify the speed of frame changes in milliseconds.\nIf wait is False animation will happen in the background while the program continues.\nIf loop is True the animation will repeat forever.\nIf clear is True the display will clear at the end of the animation.\nUse a tuple (R,G,B), list [R,G,B] or integer #RGB in 'color' to set the image's color. "
msgstr "pystubit.board.display.show(x, delay=400, wait=True, loop=False, clear=False, color=None) \n"
" 文字列またはイメージ'x'をLEDディスプレイに表示する場合、show(x)と記述します。\n"
" 'x'がイメージのリストの場合、イメージの表示が切り替わります（アニメーション）。\n"
" 'delay'には、ミリ秒単位でフレームの表示時間の長さを設定します。\n"
" 'wait'にFalseを設定した場合、バックグラウンドでアニメーション処理されます。\n"
" 'loop'にTrueを設定した場合、アニメーションが無限に繰り返されます。\n"
" 'clear'にTrueを設定した場合、アニメーション終了時にディスプレイをクリアします。\n"
" 'color'には、ディスプレイに表示する色を設定します。タプル(R, G, B)、リスト[R, G, B]、整数#RGBのいずれかで設定します。"

msgid "pystubit.board.display.scroll(string, delay=150, wait=True, loop=False, color=None)\nUse scroll(string) to scroll the string across the display.\nUse delay to control how fast the text scrolls.\nIf wait is False the text will scroll in the background while the program continues.\nIf loop is True the text will repeat forever.\nUse a tuple (R,G,B), list [R,G,B] or integer #RGB in 'color' to set the image's color. "
msgstr "pystubit.board.display.scroll(string, delay=150, wait=True, loop=False, color=None) \n"
" 文字列'string'をLEDディスプレイにスクロール表示する場合、scroll(string)と記述します。\n"
" 'delay'には、文字のスクロールする速さを定義します。\n"
" 'wait'にFalseを設定した場合、バックグラウンドでスクロール表示処理されます。\n"
" 'loop'にTrueを設定した場合、スクロール表示が無限に繰り返されます。\n"
" 'color'には、ディスプレイに表示する色を設定します。タプル(R, G, B)、リスト[R, G, B]、整数#RGBのいずれかで設定します。"

msgid "pystubit.board.display.on()\nTurn on the display."
msgstr "pystubit.board.display.on() \nディスプレイを有効にします。"

msgid "pystubit.board.display.off()\nTurn off the display. (This allows GPIO used by the display to be used for other purposes.)"
msgstr "pystubit.board.display.off() \nディスプレイを無効にします。(ディスプレイに関連づけられた GPIO 端子を他の目的に再利用できるようになります)。"

msgid "pystubit.board.display.is_on()\nQuery if the display is on (True) or off (False)."
msgstr "pystubit.board.display.is_on() \nディスプレイが有効であれば True 、無効であれば False を返します。"

msgid "pystubit.board.Image(string, color)\nCreate and use built-in IMAGES to show on the display. Use:\n Image(\n    '01100:'\n    '10010:'\n    '11110:'\n    '10010:'\n    '10010:',\n    color=(0,10,0))\n...to make a new green heart image.\nUse 1s (ON) and 0s (OFF) in 'string' to set a pattern.\nUse a tuple (R,G,B), list [R,G,B] or integer #RGB in 'color' to set the image's color. "
msgstr "pystubit.board.Image(string, color) \n"
" LEDディスプレイで表示するイメージの作成や組み込みイメージを使用します。\n"
" Image('01100:10010:11110:10010:10010:', color=(0,10,0))\n"
" と記述することで緑色のハートのイメージを作成できます。\n"
" 'string'には、'0':OFF, '1':ONでパターンを設定します。\n"
" 'color'には、イメージの色を設定します。タプル(R, G, B)、リスト[R, G, B]、整数#RGBのいずれかで設定します。"

msgid "pystubit.board.Image.width()\nReturn the width of the image in pixels."
msgstr "pystubit.board.Image.width() \nイメージの幅をピクセルで返します。"

msgid "pystubit.board.Image.height()\nReturn the height of the image in pixels."
msgstr "pystubit.board.Image.height() \nイメージの高さをピクセルで返します。"

msgid "pystubit.board.Image.set_pixel(x, y, value)\nUse set_pixel(x, y, value) to set the value of an LED pixel (x,y) in the image.\nIt can be set to 0 (off) or 1 (on)."
msgstr "pystubit.board.Image.set_pixel(x, y, value) \nイメージ(x,y)のピクセルを'value'で設定します。value引数は 0(OFF) / 1(ON)で指定します。"

msgid "pystubit.board.Image.set_pixel_color(x, y, color)\nUse set_pixel_color(x, y, color) to set the LED pixel (x,y) \nin the image to a color which can be set\nusing a tuple (R,G,B), list [R,G,B] or integer #RGB. "
msgstr "pystubit.board.Image.set_pixel_color(x, y, color) \nイメージ(x,y)のピクセルの色を'color'で設定します。タプル(R, G, B)、リスト[R, G, B]、整数#RGBのいずれかで設定します。"

msgid "pystubit.board.Image.get_pixel(x, y)\nReturn 1 (on) or 0 (off) according to\nthe state of the LED pixel (x,y) in the image."
msgstr "pystubit.board.Image.get_pixel(x, y) \nイメージ(x, y)のピクセルのON(1)/OFF(0)を返します。"

msgid "pystubit.board.Image.get_pixel_color(x, y, hex=False)\nUse get_pixel_color(x, y, hex=False) to find the color of the LED pixel (x,y) in the image.\nReturns a color as a tuple (R,G,B) if hex is False,\nand as an integer #RGB if hex is True."
msgstr "pystubit.board.Image.get_pixel_color(x, y, hex=False) \nイメージ(x, y)のピクセルの色を返します。\n'hex'にFalseを指定した場合タプル(R,G,B)を、Trueを指定した場合整数 #RGBを返します。"

msgid "pystubit.board.Image.set_base_color(color)\nUse set_base_color(color) to set all LED pixels in the image\nto a color which can be set using a tuple (R,G,B), list [R,G,B] or integer #RGB."
msgstr "pystubit.board.Image.set_base_color(color) \nイメージの全ピクセルに設定する色を'color'で設定します。タプル(R, G, B)、リスト[R, G, B]、整数#RGBのいずれかで設定します。"

msgid "pystubit.board.Image.shift_left(n)\nUse shift_left(n) to make a copy of the image\nbut moved 'n' pixels to the left."
msgstr "pystubit.board.Image.shift_left(n) \nイメージをn列だけ左にシフトした新しいイメージを返します。"

msgid "pystubit.board.Image.shift_right(n)\nUse shift_right(n) to make a copy of the image\nbut moved 'n' pixels to the right."
msgstr "pystubit.board.Image.shift_right(n) \nイメージをn列だけ右にシフトした新しいイメージを返します。"

msgid "pystubit.board.Image.shift_up(n)\nUse shift_up(n) to make a copy of the image\nbut moved 'n' pixels up."
msgstr "pystubit.board.Image.shift_up(n) \nイメージをn行だけ上にシフトした新しいイメージを返します。"

msgid "pystubit.board.Image.shift_down(n)\nUse shift_down(n) to make a copy of the\nimage but moved 'n' pixels down."
msgstr "pystubit.board.Image.shift_down(n) \nイメージをn行だけ下にシフトした新しいイメージを返します。"

msgid "pystubit.board.Image.copy()\nUse copy() to make a new exact copy of the image."
msgstr "pystubit.board.Image.copy() \nイメージのコピーを返します。"

# buzzer
msgid "pystubit.board.buzzer.on(sound, duration=-1)\nPlay sound from the Buzzer at a pitch specified in 'sound'.\n'sound' can be set using strings ('C3'-'G9'), \nMIDI note numbers ('48'-'127') or frequencies (in integers).\nUse 'duration' to set the duration of the sound in milliseconds."
msgstr "pystubit.board.buzzer.on(sound, duration=-1) \n"
" ブザーから'sound'で指定された高さの音を出力します。\n"
" 'sound'には、文字列で'C3'～'G9'のコード、'48'～'127'のMIDIノートナンバー、整数で周波数を設定します。\n"
" 'duration'には、音を出力する時間をミリ秒単位で設定します。"

msgid "pystubit.board.buzzer.off()\nStop any current sound output."
msgstr "pystubit.board.buzzer.off() \n音が出力されている場合、停止します。"

# temperature
msgid "pystubit.board.temperature.get_value()\nReturn Studuino:bit's temperature value(0-4095) in degrees Linear."
msgstr "pystubit.board.temperature.get_value() \n基板上の温度センサーの値（0-4095）を返します。"

msgid "pystubit.board.temperature.get_celsius()\nReturn Studuino:bit's temperature in degrees Celcius."
msgstr "pystubit.board.temperature.get_celsius() \n基板上の温度センサーの値を温度（セ氏）を返します。"

# lightsensor
msgid "pystubit.board.lightsensor.get_value()\nReturn Studuino:bit's light sensor's  value(0-4095) in linear."
msgstr "pystubit.board.lightsensor.get_value() \n 基板上の光センサーの値（0-4095）を返します。"

# accelerometer
msgid "pystubit.board.accelerometer.get_x()\nReturn Studuino:bit's tilt (X acceleration) in m/s/s's."
msgstr "pystubit.board.accelerometer.get_x() \n 基板の傾き（X軸の加速度）を返します。戻り値の型は符号付小数点、デフォルトの単位はメートル/秒/秒です。"

msgid "pystubit.board.accelerometer.get_y()\nReturn Studuino:bit's tilt (Y acceleration) in m/s/s's."
msgstr "pystubit.board.accelerometer.get_y() \n 基板の傾き（Y軸の加速度）を返します。戻り値の型は符号付小数点、デフォルトの単位はメートル/秒/秒です。"

msgid "pystubit.board.accelerometer.get_z()\nReturn Studuino:bit's tilt (Z acceleration) in m/s/s's."
msgstr "pystubit.board.accelerometer.get_z() \n 基板の傾き（Z軸の加速度）を返します。戻り値の型は符号付小数点、デフォルトの単位はメートル/秒/秒です。"

msgid "pystubit.board.accelerometer.get_values()\nGet the acceleration measurements in all axes at once, \nas a three-element tuple of integers (ordered as X, Y, Z)."
msgstr "pystubit.board.accelerometer.get_values() \n X,Y,Z軸の加速度をタプルで返します。(get_x(), get_y(), get_z())。"

msgid "pystubit.board.accelerometer.set_fs(value)\nSet the sensor's maximum measurement.\nUse the string '2g', '4g', '8g', or '16g' to set the maximum\nvalue between 2G and 16G."
msgstr "pystubit.board.accelerometer.set_fs(value) \n センサーのフルスケールを設定します。\n2G～16Gまで計測可能で、value引数には、文字列で'2g'/'4g'/'8g'/'16g'を設定します。"

msgid "pystubit.board.accelerometer.set_sf(value)\nSet the sensor's units of measurement.\nIt can be set to 'mg' (mg units) or 'ms2' (m/s/s units)."
msgstr "pystubit.board.accelerometer.set_sf(value) \n センサーのスケールファクタを設定します。\nミリGまたはメートル/秒/秒の単位が指定できます。value引数には、文字列で'mg'/'ms2'を設定します。"

# gyro
msgid "pystubit.board.gyro.get_x()\nReturn Studuino:bit's angular velocity on the X-axis in m/s/s's."
msgstr "pystubit.board.gyro.get_x() \n X軸の角速度を返します。戻り値の型は符号付小数点、デフォルトの単位は角度/秒です。"

msgid "pystubit.board.gyro.get_y()\nReturn Studuino:bit's angular velocity on the Y-axis in m/s/s's."
msgstr "pystubit.board.gyro.get_y() \n Y軸の角速度を返します。戻り値の型は符号付小数点、デフォルトの単位は角度/秒です。"

msgid "pystubit.board.gyro.get_z()\nReturn Studuino:bit's angular velocity on the Z-axis in m/s/s's."
msgstr "pystubit.board.gyro.get_z() \n Z軸の角速度を返します。戻り値の型は符号付小数点、デフォルトの単位は角度/秒です。"

msgid "pystubit.board.gyro.get_values()\nGet the angular velocity in all axes at once,\nas a three-element tuple of integers (ordered as X, Y, Z)."
msgstr "pystubit.board.gyro.get_values() \n X,Y,Z軸の角速度をタプルで返します。(get_x(), get_y(), get_z())。"

msgid "pystubit.board.gyro.set_fs(value)\nSet the sensor's maximum measurement.\nUse the string '250dps', '500dps', '1000dps', or '2000dps'\nto set the maximum value between 250 and 2000 degrees per second."
msgstr "pystubit.board.gyro.set_fs(value) \n センサーのフルスケールを設定します。\n250度/秒～2000度/秒まで計測可能で、value引数には、文字列で'250dps'/'500dps'/'1000dps'/'2000dps'を設定します。"

msgid "pystubit.board.gyro.set_sf(value)\nSet the sensor's units of measurement.\nIt can be set to 'dps' (degrees per second) or 'rps' (radians per second). "
msgstr "pystubit.board.gyro.set_sf(value) \n センサーのスケールファクタを設定します。\n角度/秒またはラジアン/秒の単位が指定できます。value引数には、文字列で'dps'/'rps'を設定します。"

# compass
msgid "pystubit.board.compass.get_x()\nReturn magnetic field detected along Studuino:bit's X axis.\nThe compass returns the earth's magnetic field in micro-Tesla units.\nThe value will be higher facing magnetic north,\nand lower facing magnetic south."
msgstr "pystubit.board.compass.get_x() \n X軸の磁場を返します。戻り値の型は符号付小数点、デフォルトの単位はマイクロ・テスラです。\nN極が近づくと+, S極が近づくと-になります。"

msgid "pystubit.board.compass.get_y()\nReturn magnetic field detected along Studuino:bit's Y axis.\nThe compass returns the earth's magnetic field in micro-Tesla units.\nThe value will be higher facing magnetic north,\nand lower facing magnetic south."
msgstr "pystubit.board.compass.get_y() \n Y軸の磁場を返します。戻り値の型は符号付小数点、デフォルトの単位はマイクロ・テスラです。\nN極が近づくと+, S極が近づくと-になります。"

msgid "pystubit.board.compass.get_z()\nReturn magnetic field detected along Studuino:bit's Z axis.\nThe compass returns the earth's magnetic field in micro-Tesla units.\nThe value will be higher facing magnetic north,\nand lower facing magnetic south."
msgstr "pystubit.board.compass.get_z() \n Z軸の磁場を返します。戻り値の型は符号付小数点、デフォルトの単位はマイクロ・テスラです。\nN極が近づくと+, S極が近づくと-になります。"

msgid "pystubit.board.compass.get_values()\nGet the magnetic field measurements from all axes at once,\nas a three-element tuple of integers (ordered as X, Y, Z)."
msgstr "pystubit.board.compass.get_values() \n X,Y,Z軸の磁場をタプルで返します。(get_x(), get_y(), get_z())。"

msgid "pystubit.board.compass.calibrate()\nIf Studuino:bit's compass is confused, calibrate() it to adjust the its accuracy.\nCalibration will ask you to rotate the device to draw a circle on the display.\nAfterwards, Studuino:bit will know which way is north."
msgstr "pystubit.board.compass.calibrate() \n "基板の地磁気センサーが正しい値を示さない場合、実行してください。磁気センサーのキャリブレーションを開始します。LEDディスプレイ上に円を描くようデバイスを回転させます。"

msgid "pystubit.board.compass.is_calibrated()\nIf Studuino:bit's compass is_calibrated() and adjusted for accuracy, return True.\nIf the compass hasn't been adjusted for accuracy, return False."
msgstr "pystubit.board.compass.is_calibrated() \n キャリブレーションが成功したかどうかにより True または False を返します。"

msgid "pystubit.board.compass.clear_calibration()\nReset Studuino:bit's compass using clear_calibration() command."
msgstr "pystubit.board.compass.clear_calibration() \n キャリブレーションを取り消します。"

msgid "pystubit.board.compass.heading()\nReturn a number between 0-360 indicating the device's heading. 180 is north."
msgstr "pystubit.board.compass.heading() \n 磁針の向きを返します。0～360°の整数で、時計回りで北が180°になります。"

# p0
msgid "pystubit.board.p0.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p0.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p0.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p0.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p0.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p0.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p0.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p0.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p0.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p0.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p0.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p0.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p0.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p0.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p0.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p0.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p1
msgid "pystubit.board.p1.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p1.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p1.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p1.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p1.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p1.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p1.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p1.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p1.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p1.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p1.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p1.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p1.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p1.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p1.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p1.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p2
msgid "pystubit.board.p2.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p2.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p2.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p2.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p2.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p2.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p2.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p2.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p2.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p2.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p2.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p2.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p2.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p2.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p2.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p2.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p3
msgid "pystubit.board.p3.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p3.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p3.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p3.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p3.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p3.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p3.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p3.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p3.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p3.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p3.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p3.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p3.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p3.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p3.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p3.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p4
msgid "pystubit.board.p4.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p4.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p4.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p4.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p4.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p4.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p4.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p4.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p4.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p4.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p4.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p4.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p4.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p4.status() \n PWMの使用状況をREPLに表示します。"

# p5
msgid "pystubit.board.p5.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p5.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p5.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p5.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p5.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p5.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p5.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p5.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p5.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p5.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p5.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p5.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p5.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p5.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p5.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p5.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p6
msgid "pystubit.board.p6.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p6.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p6.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p6.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p6.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p6.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p6.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p6.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p6.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p6.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p6.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p6.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p6.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p6.status() \n PWMの使用状況をREPLに表示します。"

# p7
msgid "pystubit.board.p7.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p7.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p7.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p7.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p7.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p7.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p7.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p7.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p7.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p7.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p7.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p7.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p7.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p7.status() \n PWMの使用状況をREPLに表示します。"

# p8
msgid "pystubit.board.p8.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p8.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p8.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p8.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p8.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p8.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p8.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p8.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p8.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p8.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p8.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p8.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p8.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p8.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p8.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p8.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p9
msgid "pystubit.board.p9.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p9.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p9.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p9.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p9.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p9.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p9.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p9.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p9.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p9.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p9.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p9.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p9.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p9.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p9.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p9.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p10
msgid "pystubit.board.p10.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p10.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p10.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p10.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p10.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p10.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p10.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p10.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p10.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p10.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p10.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p10.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p10.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p10.status() \n PWMの使用状況をREPLに表示します。"

# p11
msgid "pystubit.board.p11.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p11.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p11.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p11.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p11.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p11.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p11.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p11.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p11.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p11.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p11.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p11.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p11.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p11.status() \n PWMの使用状況をREPLに表示します。"

# p12
msgid "pystubit.board.p12.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p12.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p12.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p12.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p12.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p12.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p12.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p12.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p12.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p12.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p12.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p12.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p12.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p12.status() \n PWMの使用状況をREPLに表示します。"

# p13
msgid "pystubit.board.p13.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p13.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p13.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p13.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p13.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p13.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p13.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p13.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p13.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p13.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p13.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p13.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p13.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p13.status() \n PWMの使用状況をREPLに表示します。"

# p14
msgid "pystubit.board.p14.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p14.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p14.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p14.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p14.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p14.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p14.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p14.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p14.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p14.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p14.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p14.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p14.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p14.status() \n PWMの使用状況をREPLに表示します。"

# p15
msgid "pystubit.board.p15.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p15.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p15.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p15.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p15.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p15.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p15.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p15.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p15.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p15.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p15.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p15.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p15.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p15.status() \n PWMの使用状況をREPLに表示します。"

# p16
msgid "pystubit.board.p16.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p16.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p16.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p16.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p16.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p16.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p16.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p16.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p16.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p16.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p16.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p16.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p16.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p16.status() \n PWMの使用状況をREPLに表示します。"

msgid "pystubit.board.p16.read_analog(mv=False)\nRead the voltage applied to pin. If mv=False, return the reading\nas a number between 0 (meaning 0v) and 4095. \nIf mv=True, return the reading in millivolts."
msgstr "pystubit.board.p16.read_analog(mv=False) \n 端子からアナログ信号をリードします。\n mv=Falseの場合、0～4095の整数を返します。mv=Trueの場合、電圧をmV（ミリ・ボルト）で返します。"

# p19
msgid "pystubit.board.p19.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p19.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p19.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p19.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p19.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p19.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p19.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p19.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p19.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p19.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p19.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p19.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p19.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p19.status() \n PWMの使用状況をREPLに表示します。"

# p20
msgid "pystubit.board.p20.write_digital(value)\nWrite digital output to a pin. Set pin to output high if value is 1, or to low, if it is 0."
msgstr "pystubit.board.p20.write_digital(value) \n 端子からデジタル出力します。\n value引数が1の場合はハイに設定し、0の場合はローに設定します。"

msgid "pystubit.board.p20.read_digital()\nRead digital value from pin. The reading will be either 0 (low) or 1 (high)."
msgstr "pystubit.board.p20.read_digital() \n 端子からデジタル信号をリードします。\n 戻り値は、ハイの場合は1、ローの場合は0を返します。"

msgid "pystubit.board.p20.write_analog(value)\nOutput PWM signal. Set the output from 0 (0%) to 100 (100%)."
msgstr "pystubit.board.p20.write_analog(value) \n PWM信号を端子に出力します。\n value引数は、浮動小数点数で、0(0%)～100(100%)を設定します。"

msgid "pystubit.board.p20.set_analog_period(period, timer=-1)\nSet the period of the PWM signal output to period milliseconds.\nThe minimum period is 1ms.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p20.set_analog_period(period, timer=-1) \n PWM 信号の周期を period にミリ秒単位で設定します。有効な最小値は 1ms です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p20.set_analog_period_microseconds(period, timer=-1)\nSet the period of the PWM signal output to period microseconds.\nThe minimum period is 256us.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p20.set_analog_period_microseconds(period, timer=-1) \n PWM 信号の周期を period にマイクロ秒単位で設定します。有効な最小値は 256μs です。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p20.set_analog_hz(hz, timer=-1)\nSet the period of the PWM signal output to period frequency.\nYou can set the PWM's timer by picking a timer ID 0-3."
msgstr "pystubit.board.p20.set_analog_hz(hz, timer=-1) \n PWM 信号の周期を周波数で設定します。\n timer引数でPWMに使用するタイマーのIDを0～3で設定できます。"

msgid "pystubit.board.p20.status()\nDisplay current PWM usage on REPL."
msgstr "pystubit.board.p20.status() \n PWMの使用状況をREPLに表示します。"

# DCMotor
msgid "pyatcrobo2.parts.DCMotor(pin)\nCreate a DC Motor instance. The pin parameter can be set\nto either 'M1' or 'M2' to specify a pin with a DC Motor connected to it."
msgstr "pyatcrobo2.parts.DCMotor(pin) \n DCモーターのインスタンスを生成します。\n pin引数にDCモーターを接続しているピンを文字列（'M1'/ 'M2'）で指定します。"

msgid "pyatcrobo2.parts.DCMotor.cw()\nSpin a DC Motor clockwise."
msgstr "pyatcrobo2.parts.DCMotor.cw() \n DCモーターを正転で回転します。"

msgid "pyatcrobo2.parts.DCMotor.ccw()\nSpin a DC Motor counter-clockwise."
msgstr "pyatcrobo2.parts.DCMotor.ccw() \n DCモーターを逆転で回転します。"

msgid "pyatcrobo2.parts.DCMotor.stop()\nStop powering a DC Motor, allowing it to coast to a stop."
msgstr "pyatcrobo2.parts.DCMotor.stop() \n DCモーターの回転を脱力で停止します。"

msgid "pyatcrobo2.parts.DCMotor.brake()\nStop a DC Motor's rotation."
msgstr "pyatcrobo2.parts.DCMotor.brake() \n DCモーターを回転を停止します。"

msgid "pyatcrobo2.parts.DCMotor.power(power)\nSet a DC Motor's speed.\nThe speed can be set from 0 (slowest) to 255 (fastest)."
msgstr "pyatcrobo2.parts.DCMotor.power(power) \n DCモーターのパワーを設定します。\n power引数には、0～255の整数を設定します。"

# Servomotor
msgid "pyatcrobo2.parts.Servomotor(pin)\nCreate a Servomotor instance.\nThe pin parameter can be set to 'P13', 'P14', 'P15', or 'P16'\nto specify a pin with a Servomotor connected to it. "
msgstr "pyatcrobo2.parts.Servomotor(pin) \n サーボモーターのインスタンスを生成します。\n pin引数にサーボモーターを接続しているピンを文字列（'P13'/'P14'/ 'P15'/ 'P16'）で指定します。"

msgid "pyatcrobo2.parts.Servomotor.set_angle(degree)\nSet a Servomotor's angle.\nThe angle can be sety in degrees 0-180."
msgstr "pyatcrobo2.parts.Servomotor.set_angle(degree) \n サーボモーターの角度を制御します。\n degree引数に角度(0～180)を整数で設定します。"

# Buzzer
msgid "pyatcrobo2.parts.Buzzer(pin)\nCreate a Buzzer instance.\nThe pin parameter can be set to 'P13', 'P14', 'P15', or 'P16'\nto specify a pin with a Buzzer connected to it. "
msgstr "pyatcrobo2.parts.Buzzer(pin) \nブザーのインスタンスを生成します。\n pin引数にブザーを接続しているピンを文字列（'P13'/'P14'/ 'P15'/ 'P16'）で指定します。"

msgid "pyatcrobo2.parts.Buzzer.on(sound, volume=-1, duration=-1)\nSet a specific note for the Buzzer to play.\nThe note can be set using strings ('C3'-'G9'),\nMIDI note numbers ('48'-'127') or frequencies (in integers).\nThe volume can be set by percentage (0-99).\nDuration can be set in milliseconds to make the sound\nplay for a pre-set length of time."
msgstr "pyatcrobo2.parts.Buzzer.on(sound, volume=-1, duration=-1) \n ブザーから指定された高さの音を出力します。\n"
" sound引数には、文字列で'C3'～'G9'のコード、'48'～'127'のMIDIノートナンバー、整数で周波数を設定します。\n"
" volume引数には、ボリュームを百分率（整数（0～99））で設定します。\n"
" duration引数に正の整数を設定した場合、設定した値（ミリ秒単位）の間、音を出力します。"

msgid "pyatcrobo2.parts.Buzzer.off()\nStop any current sound output."
msgstr "pyatcrobo2.parts.Buzzer.off() \n 音が出力されている場合、停止します。"

# LED
msgid "pyatcrobo2.parts.LED(pin)\nCreate an LED instance.\nThe pin parameter can be set to 'P13', 'P14', 'P15', or 'P16'\nto specify a pin with an LED connected to it. "
msgstr "pyatcrobo2.parts.LED(pin)\n LEDのインスタンスを生成します。\n pin引数にLEDを接続しているピンを文字列（'P13'/'P14'/'P15'/'P16'）で指定します。"

msgid "pyatcrobo2.parts.LED.on()\nTurn on an LED."
msgstr "pyatcrobo2.parts.LED.on() \n LEDを点灯します。"

msgid "pyatcrobo2.parts.LED.off()\nTurn off an LED."
msgstr "pyatcrobo2.parts.LED.off() \n LEDを消灯します。"

# IRPhotoReflector
msgid "pyatcrobo2.parts.IRPhotoReflector(pin)\nCreate an IR Photoreflector instance.\nThe pin parameter can be set to 'P0', 'P1', or 'P2'\nto specify a pin with an IR Photoreflector connected to it. "
msgstr "pyatcrobo2.parts.IRPhotoReflector(pin) \n 赤外線フォトリフレクタのインスタンスを生成します。\n pin引数に赤外線フォトリフレクタを接続しているピンを文字列（'P0'/'P1'/'P2'）で指定します。"

msgid "pyatcrobo2.parts.IRPhotoReflector.get_value()\nRetrieve current sensor value (0-4095)."
msgstr "pyatcrobo2.parts.IRPhotoReflector.get_value() \n センサーの値(0～4095)を取得します。"

# LightSensor
msgid "pyatcrobo2.parts.LightSensor(pin)\nCreate a Light Sensor instance.\nThe pin parameter can be set to 'P0', 'P1', or 'P2'\nto specify a pin with a Light Sensor connected to it. "
msgstr "pyatcrobo2.parts.LightSensor(pin) \n 光センサーのインスタンスを生成します。\n pin引数に光センサーを接続しているピンを文字列（'P0'/'P1'/'P2'）で指定します。"

msgid "pyatcrobo2.parts.LightSensor.get_value()\nRetrieve current sensor value (0-4095)."
msgstr "pyatcrobo2.parts.LightSensor.get_value() \n センサーの値(0～4095)を取得します。"

# Temperature
msgid "pyatcrobo2.parts.Temperature(pin)\nCreate a Temperature Sensor instance.\nThe pin parameter can be set to 'P0', 'P1', or 'P2'\nto specify a pin with a Temperature Sensor connected to it. "
msgstr "pyatcrobo2.parts.Temperature(pin)\n 温度センサーのインスタンスを生成します。\n pin引数に温度センサーを接続しているピンを文字列（'P0'/'P1'/'P2'）で指定します。"

msgid "pyatcrobo2.parts.Temperature.get_value()\nRetrieve current sensor value (0-4095)."
msgstr "pyatcrobo2.parts.Temperature.get_value() \n センサーの値(0～4095)を取得します。"

msgid "pyatcrobo2.parts.Temperature.get_celsius()\nRetrieve current sensor value in degrees Celsius."
msgstr "pyatcrobo2.parts.Temperature.get_celsius() \n センサーの値を温度（セ氏）で取得します。"

# SoundSensor
msgid "pyatcrobo2.parts.SoundSensor(pin)\nCreate a Sound Sensor instance.\nThe pin parameter can be set to 'P0', 'P1', or 'P2'\nto specify a pin with a Sound Sensor connected to it. "
msgstr "pyatcrobo2.parts.SoundSensor(pin) \n 音センサーのインスタンスを生成します。\n pin引数に音センサーを接続しているピンを文字列（'P0'/'P1'/'P2'）で指定します。"

msgid "pyatcrobo2.parts.SoundSensor.get_value()\nRetrieve current sensor value (0-4095)."
msgstr "pyatcrobo2.parts.SoundSensor.get_value() \n センサーの値(0～4095)を取得します。"

# TouchSensor
msgid "pyatcrobo2.parts.TouchSensor(pin)\nCreate a Touch Sensor instance.\nThe pin parameter can be set to 'P0', 'P1', or 'P2'\nto specify a pin with a Touch Sensor connected to it. "
msgstr "pyatcrobo2.parts.TouchSensor(pin) \n タッチセンサーのインスタンスを生成します。\n pin引数にタッチセンサーを接続しているピンを文字列（'P0'/'P1'/'P2'）で指定します。"

msgid "pyatcrobo2.parts.TouchSensor.get_value()\nRetrieve current sensor value (0/1)."
msgstr "pyatcrobo2.parts.TouchSensor.get_value() \n センサーの値(0/1)を取得します。"

# Accelerometer
msgid "pyatcrobo2.parts.Accelerometer(pin)\nCreate an Accelerometer instance.\nUse 'I2C' to set the Accelerometer's pin."
msgstr "pyatcrobo2.parts.Accelerometer(pin) \n 加速度センサーのインスタンスを生成します。\n pin引数に加速度センサーを接続しているピンを文字列（'I2C'）で指定します。"

msgid "pyatcrobo2.parts.Accelerometer.configuration(highres, scale)\nChange the Accelerometer's settings.\nHigh res can be set to True (16-bit resolution) or False (8-bit resolution).\nThe Accelerometer's maximum measurable acceleration\ncan be set to 2, 4, or 8 (from 2G to 8G)."
msgstr "pyatcrobo2.parts.Accelerometer.configuration(highres, scale) \n 加速度センサーを設定します。\n"
" highres引数には、高解像度指定をTrue/Falseで設定します。Trueを指定した場合、解像度は16bit、Falseを指定した場合、解像度は8bitになります。\n"
" scale引数には、加速度の測定範囲(2G～8G)を指定します。整数で2,4,8をのいずれかを設定します。"

msgid "pyatcrobo2.parts.Accelerometer.get_x()\nReturn tilt (X acceleration) in m/s/s's."
msgstr "pyatcrobo2.parts.Accelerometer.get_x() \n X軸の加速度を返します。戻り値の型は符号付整数、デフォルトの単位はメートル/秒/秒です。"

msgid "pyatcrobo2.parts.Accelerometer.get_y()\nReturn tilt (Y acceleration) in m/s/s's."
msgstr "pyatcrobo2.parts.Accelerometer.get_y() \n Y軸の加速度を返します。戻り値の型は符号付整数、デフォルトの単位はメートル/秒/秒です。"

msgid "pyatcrobo2.parts.Accelerometer.get_z()\nReturn tilt (Z acceleration) in m/s/s's."
msgstr "pyatcrobo2.parts.Accelerometer.get_z() \n Z軸の加速度を返します。戻り値の型は符号付整数、デフォルトの単位はメートル/秒/秒です。"

msgid "pyatcrobo2.parts.Accelerometer.get_values()\nGet the acceleration measurements in all axes at once, \nas a three-element tuple of integers (ordered as X, Y, Z)."
msgstr "pyatcrobo2.parts.Accelerometer.get_values() \n X,Y,Z軸の加速度をタプルで返します。(get_x(), get_y(), get_z())。"
