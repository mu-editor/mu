[
  {
    "description": "Interface to the screen.",
    "name": "screen.Screen",
    "args": [
      "surface"
    ]
  },
  {
    "description": "Interface to pygame.draw that is bound to a surface.",
    "name": "screen.SurfacePainter",
    "args": [
      "screen"
    ]
  },
  {
    "description": "pygame-text - high-level text rendering with Pygame.\n\nThis module is directly copied from\n\n    https://github.com/cosmologicon/pygame-text\n\nat revision 5c87c9fe99b3711c90701b08810f0176dcf951e2\nand used under CC0.",
    "name": "screen.pgzero.ptext",
    "args": null
  },
  {
    "description": "Pygame is a set of Python modules designed for writing games.\nIt is written on top of the excellent SDL library. This allows you\nto create fully featured games and multimedia programs in the python\nlanguage. The package is highly portable, with games running on\nWindows, MacOS, OS X, BeOS, FreeBSD, IRIX, and Linux.",
    "name": "screen.pygame",
    "args": null
  },
  {
    "description": "Round a tuple position so it can be used for drawing.",
    "name": "screen.round_pos",
    "args": [
      "pos"
    ]
  },
  {
    "description": "Abstract resource loader.\n\nA resource loader is a singleton; resources are loaded from a named\nsubdirectory of the global 'root'. The `.load()` method actually loads\na resource.\n\nAdditionally, attribute access can be used to access and cache resources.\nDotted paths can be used to traverse directories.",
    "name": "music.ResourceLoader",
    "args": [
      "subpath"
    ]
  },
  {
    "description": "Names for constants returned by Pygame.",
    "name": "music.pgzero.constants",
    "args": null
  },
  {
    "description": "Fade out and eventually stop the music playback.\n\n:param seconds: The duration in seconds over which the sound will be faded\n                out. For example, to fade out over half a second, call\n                ``music.fadeout(0.5)``.",
    "name": "music.fadeout",
    "args": [
      "seconds"
    ]
  },
  {
    "description": "get_pos() -> time\nget the music play time",
    "name": "music.get_pos",
    "args": null
  },
  {
    "description": "get_volume() -> value\nget the music volume",
    "name": "music.get_volume",
    "args": null
  },
  {
    "description": "Return True if the music is playing and not paused.",
    "name": "music.is_playing",
    "args": [
      "name"
    ]
  },
  {
    "description": "Temporarily stop playback of the music stream.\n\nCall `unpause()` to resume.",
    "name": "music.pause",
    "args": [
      ""
    ]
  },
  {
    "description": "Play a music file from the music/ directory.\n\nThe music will loop when it finishes playing.",
    "name": "music.play",
    "args": [
      "name"
    ]
  },
  {
    "description": "Play a music file from the music/ directory.",
    "name": "music.play_once",
    "args": [
      "name"
    ]
  },
  {
    "description": "Queue a music file to follow the current track.\n\nThis will load a music file and queue it. A queued music file will begin as\nsoon as the current music naturally ends. If the current music is ever\nstopped or changed, the queued song will be lost.",
    "name": "music.queue",
    "args": [
      "name"
    ]
  },
  {
    "description": "rewind() -> None\nrestart music",
    "name": "music.rewind",
    "args": null
  },
  {
    "description": "set_pos(pos) -> None\nset position to play from",
    "name": "music.set_pos",
    "args": null
  },
  {
    "description": "set_volume(value) -> None\nset the music volume",
    "name": "music.set_volume",
    "args": null
  },
  {
    "description": "stop() -> None\nstop the music playback",
    "name": "music.stop",
    "args": null
  },
  {
    "description": "Resume playback of the music stream after it has been paused.",
    "name": "music.unpause",
    "args": [
      ""
    ]
  },
  {
    "description": "The current state of the keyboard.\n\nEach attribute represents a key. For example, ::\n\n    keyboard.a\n\nis True if the 'A' key is depressed, and False otherwise.",
    "name": "keyboard.Keyboard",
    "args": [
      ""
    ]
  },
  {
    "description": "An enumeration.",
    "name": "keyboard.keys",
    "args": [
      "value",
      "names=None",
      "*",
      "module=None",
      "qualname=None",
      "type=None",
      "start=1"
    ]
  },
  {
    "description": "Support for regular expressions (RE).\n\nThis module provides regular expression matching operations similar to\nthose found in Perl.  It supports both 8-bit and Unicode strings; both\nthe pattern and the strings being processed can contain null bytes and\ncharacters outside the US ASCII range.\n\nRegular expressions can contain both special and ordinary characters.\nMost ordinary characters, like \"A\", \"a\", or \"0\", are the simplest\nregular expressions; they simply match themselves.  You can\nconcatenate ordinary characters, so last matches the string 'last'.\n\nThe special characters are:\n    \".\"      Matches any character except a newline.\n    \"^\"      Matches the start of the string.\n    \"$\"      Matches the end of the string or just before the newline at\n             the end of the string.\n    \"*\"      Matches 0 or more (greedy) repetitions of the preceding RE.\n             Greedy means that it will match as many repetitions as possible.\n    \"+\"      Matches 1 or more (greedy) repetitions of the preceding RE.\n    \"?\"      Matches 0 or 1 (greedy) of the preceding RE.\n    *?,+?,?? Non-greedy versions of the previous three special characters.\n    {m,n}    Matches from m to n repetitions of the preceding RE.\n    {m,n}?   Non-greedy version of the above.\n    \"\\\\\"     Either escapes special characters or signals a special sequence.\n    []       Indicates a set of characters.\n             A \"^\" as the first character indicates a complementing set.\n    \"|\"      A|B, creates an RE that will match either A or B.\n    (...)    Matches the RE inside the parentheses.\n             The contents can be retrieved or matched later in the string.\n    (?aiLmsux) Set the A, I, L, M, S, U, or X flag for the RE (see below).\n    (?:...)  Non-grouping version of regular parentheses.\n    (?P<name>...) The substring matched by the group is accessible by name.\n    (?P=name)     Matches the text matched earlier by the group named name.\n    (?#...)  A comment; ignored.\n    (?=...)  Matches if ... matches next, but doesn't consume the string.\n    (?!...)  Matches if ... doesn't match next.\n    (?<=...) Matches if preceded by ... (must be fixed length).\n    (?<!...) Matches if not preceded by ... (must be fixed length).\n    (?(id/name)yes|no) Matches yes pattern if the group with id/name matched,\n                       the (optional) no pattern otherwise.\n\nThe special sequences consist of \"\\\\\" and a character from the list\nbelow.  If the ordinary character is not on the list, then the\nresulting RE will match the second character.\n    \\number  Matches the contents of the group of the same number.\n    \\A       Matches only at the start of the string.\n    \\Z       Matches only at the end of the string.\n    \\b       Matches the empty string, but only at the start or end of a word.\n    \\B       Matches the empty string, but not at the start or end of a word.\n    \\d       Matches any decimal digit; equivalent to the set [0-9] in\n             bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the whole\n             range of Unicode digits.\n    \\D       Matches any non-digit character; equivalent to [^\\d].\n    \\s       Matches any whitespace character; equivalent to [ \\t\\n\\r\\f\\v] in\n             bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the whole\n             range of Unicode whitespace characters.\n    \\S       Matches any non-whitespace character; equivalent to [^\\s].\n    \\w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_]\n             in bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the\n             range of Unicode alphanumeric characters (letters plus digits\n             plus underscore).\n             With LOCALE, it will match the set [0-9_] plus characters defined\n             as letters for the current locale.\n    \\W       Matches the complement of \\w.\n    \\\\       Matches a literal backslash.\n\nThis module exports the following functions:\n    match     Match a regular expression pattern to the beginning of a string.\n    fullmatch Match a regular expression pattern to all of a string.\n    search    Search a string for the presence of a pattern.\n    sub       Substitute occurrences of a pattern found in a string.\n    subn      Same as sub, but also return the number of substitutions made.\n    split     Split a string by the occurrences of a pattern.\n    findall   Find all occurrences of a pattern in a string.\n    finditer  Return an iterator yielding a match object for each match.\n    compile   Compile a pattern into a RegexObject.\n    purge     Clear the regular expression cache.\n    escape    Backslash all non-alphanumerics in a string.\n\nSome of the functions in this module takes flags as optional parameters:\n    A  ASCII       For string patterns, make \\w, \\W, \\b, \\B, \\d, \\D\n                   match the corresponding ASCII character categories\n                   (rather than the whole Unicode categories, which is the\n                   default).\n                   For bytes patterns, this flag is the only available\n                   behaviour and needn't be specified.\n    I  IGNORECASE  Perform case-insensitive matching.\n    L  LOCALE      Make \\w, \\W, \\b, \\B, dependent on the current locale.\n    M  MULTILINE   \"^\" matches the beginning of lines (after a newline)\n                   as well as the string.\n                   \"$\" matches the end of lines (before a newline) as well\n                   as the end of the string.\n    S  DOTALL      \".\" matches any character at all, including the newline.\n    X  VERBOSE     Ignore whitespace and comments for nicer looking RE's.\n    U  UNICODE     For compatibility only. Ignored for string patterns (it\n                   is the default), and forbidden for bytes patterns.\n\nThis module also defines an exception 'error'.",
    "name": "keyboard.re",
    "args": null
  },
  {
    "description": "Issue a warning, or maybe ignore it or raise an exception.",
    "name": "keyboard.warn",
    "args": null
  },
  {
    "description": "A clock used for event scheduling.\n\nWhen tick() is called, all events scheduled for before now will be called\nin order.\n\ntick() would typically be called from the game loop for the default clock.\n\nAdditional clocks could be created - for example, a game clock that could\nbe suspended in pause screens. Your code must take care of calling tick()\nor not. You could also run the clock at a different rate if desired, by\nscaling dt before passing it to tick().",
    "name": "clock.Clock",
    "args": [
      ""
    ]
  },
  {
    "description": "An event scheduled for a future time.\n\nEvents are ordered by their scheduled execution time.",
    "name": "clock.Event",
    "args": [
      "time",
      "cb",
      "repeat=None"
    ]
  },
  {
    "description": "method(function, instance)\n\nCreate a bound instance method object.",
    "name": "clock.method",
    "args": null
  },
  {
    "description": "Schedule a callback to be called every tick.\n\nUnlike the standard scheduler functions, the callable is passed the\nelapsed clock time since the last call (the same value passed to tick).",
    "name": "clock.each_tick",
    "args": [
      "callback"
    ]
  },
  {
    "description": "Heap queue algorithm (a.k.a. priority queue).\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nUsage:\n\nheap = []            # creates an empty heap\nheappush(heap, item) # pushes a new item on the heap\nitem = heappop(heap) # pops the smallest item from the heap\nitem = heap[0]       # smallest item on the heap without popping it\nheapify(x)           # transforms list into a heap, in-place, in linear time\nitem = heapreplace(heap, item) # pops and returns smallest item, and adds\n                               # new item; the heap size is unchanged\n\nOur API differs from textbook heap algorithms as follows:\n\n- We use 0-based indexing.  This makes the relationship between the\n  index for a node and the indexes for its children slightly less\n  obvious, but is more suitable since Python uses 0-based indexing.\n\n- Our heappop() method returns the smallest item, not the largest.\n\nThese two make it possible to view the heap as a regular Python list\nwithout surprises: heap[0] is the smallest item, and heap.sort()\nmaintains the heap invariant!",
    "name": "clock.heapq",
    "args": null
  },
  {
    "description": "Schedule callback to be called once, at `delay` seconds from now.\n\n:param callback: A parameterless callable to be called.\n:param delay: The delay before the call (in clock time / seconds).",
    "name": "clock.schedule",
    "args": [
      "callback",
      "delay"
    ]
  },
  {
    "description": "Schedule callback to be called every `delay` seconds.\n\nThe first occurrence will be after `delay` seconds.\n\n:param callback: A parameterless callable to be called.\n:param delay: The interval in seconds.",
    "name": "clock.schedule_interval",
    "args": [
      "callback",
      "delay"
    ]
  },
  {
    "description": "Schedule callback to be called once, at `delay` seconds from now.\n\nIf it was already scheduled, postpone its firing.\n\n:param callback: A parameterless callable to be called.\n:param delay: The delay before the call (in clock time / seconds).",
    "name": "clock.schedule_unique",
    "args": [
      "callback",
      "delay"
    ]
  },
  {
    "description": "Update the clock time and fire all scheduled events.\n\n:param dt: The elapsed time in seconds.",
    "name": "clock.tick",
    "args": [
      "dt"
    ]
  },
  {
    "description": "Class decorator that fills in missing ordering methods",
    "name": "clock.total_ordering",
    "args": [
      "cls"
    ]
  },
  {
    "description": "Unschedule the given callback.\n\nIf scheduled multiple times all instances will be unscheduled.",
    "name": "clock.unschedule",
    "args": [
      "callback"
    ]
  },
  {
    "description": "Quick weak method ref in case users aren't using Python 3.4",
    "name": "clock.weak_method",
    "args": [
      "method"
    ]
  },
  {
    "description": "An animation manager for object attribute animations.\n\nEach keyword argument given to the Animation on creation (except\n\"type\" and \"duration\") will be *tweened* from their current value\non the object to the target value specified.\n\nIf the value is a list or tuple, then each value inside that will\nbe tweened.\n\nThe update() method is automatically scheduled with the clock for\nthe duration of the animation.",
    "name": "animation.Animation",
    "args": [
      "object",
      "tween='linear'",
      "duration=1",
      "on_finished=None",
      "**targets"
    ]
  },
  {
    "description": "Schedule a callback to be called every tick.\n\nUnlike the standard scheduler functions, the callable is passed the\nelapsed clock time since the last call (the same value passed to tick).",
    "name": "animation.each_tick",
    "args": [
      "callback"
    ]
  },
  {
    "description": "pow(x, y)\n\nReturn x**y (x to the power of y).",
    "name": "animation.pow",
    "args": null
  },
  {
    "description": "sin(x)\n\nReturn the sine of x (measured in radians).",
    "name": "animation.sin",
    "args": null
  },
  {
    "description": "Unschedule the given callback.\n\nIf scheduled multiple times all instances will be unscheduled.",
    "name": "animation.unschedule",
    "args": [
      "callback"
    ]
  },
  {
    "description": "Rect(left, top, width, height) -> Rect\nRect((left, top), (width, height)) -> Rect\nRect(object) -> Rect\npygame object for storing rectangular coordinates",
    "name": "actor.Actor",
    "args": [
      "image",
      "pos=None",
      "anchor=None",
      "**kwargs"
    ]
  },
  {
    "description": "Pygame is a set of Python modules designed for writing games.\nIt is written on top of the excellent SDL library. This allows you\nto create fully featured games and multimedia programs in the python\nlanguage. The package is highly portable, with games running on\nWindows, MacOS, OS X, BeOS, FreeBSD, IRIX, and Linux.",
    "name": "actor.pygame",
    "args": null
  }
]